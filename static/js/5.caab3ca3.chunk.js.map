{"version":3,"sources":["components/CardBodyText.js","components/CardContentWrapper.js","components/CardItem.js","components/CardItemWrapper.js","components/CardSubTitle.js","components/CardTitle.js","components/CardsWrapper.js","components/FloatingBottomRightButton.js","components/PageHeader.js","components/PageWrapper.js","components/BackButton.js","components/FloatingBottomFullButton.js","components/AddQuestionForm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","features/AddNewQuestion/AddQuestionPage.js","hooks/useCustomForm.js"],"names":["CardBodyText","styled","h2","props","inputColor","CardContentWrapper","div","CardItem","CardItemWrapper","li","CardSubTitle","p","CardTitle","CardsWrapper","ul","FloatingButtonContainer","FloatingBottomRightButton","button","PageHeader","h1","PageWrapper","BackButton","FloatingBottomFullButtonContainer","FloatingBottomFullButton","FormDivContainer","FormRow","FormLabelContainer","FormInputContainer","FormSubmitButton","FormLabel","label","FormTextInput","input","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","AddQuestionPage","dispatch","useDispatch","history","useHistory","initialState","callback","useState","inputs","setValues","handleSubmit","useCallback","event","preventDefault","handleInputChange","persist","values","target","useCustomForm","question","choices","newQuestion","addNewQuestion","alert","handleAddNewQuestion","split","filter","choice","onClick","onSubmit","htmlFor","type","onChange","required","placeholder"],"mappings":"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","file":"static/js/5.caab3ca3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n/** CardBodyText component used as a wrapper for Card body Text */\nexport const CardBodyText = styled.h2`\n  color: ${(props) => props.inputColor || \"#dadada\"};\n  font-size: 1.1rem;\n`;\n","import styled from \"styled-components\";\n\n/** CardContentWrapper component used as a wrapper for Card Content */\nexport const CardContentWrapper = styled.div`\n  padding: 1rem;\n  height: 100%;\n`;\n","import styled from \"styled-components\";\n\n/** CardItem component used as a wrapper for single card */\nexport const CardItem = styled.div`\n  border-radius: 0.25rem;\n  box-shadow: 0 20px 40px -14px #1e1e1e;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  background-color: #c53e55;\n  &:hover {\n    -webkit-transform: scale(1.05);\n    -ms-transform: scale(1.05);\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** CardItemWrapper component used as a wrapper for single card */\nexport const CardItemWrapper = styled.li`\n  display: grid;\n  padding: 1rem;\n  width: 100%;\n  @media (min-width: 40rem) {\n    width: 50%;\n  }\n  @media (min-width: 56rem) {\n    33.3333%;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** CardSubtitle component used as a wrapper for Card Subtitle */\nexport const CardSubTitle = styled.p`\n  color: ${(props) => props.inputColor || \"#dadada\"};\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-bottom: 1.25rem;\n  font-weight: 400;\n`;\n","import styled from \"styled-components\";\n\n/** CardTitle component used as a wrapper for Card Title */\nexport const CardTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: bold;\n  letter-spacing: 1px;\n  text-transform: capitalize;\n  margin: 0px;\n  color: ${(props) => props.inputColor || \"#dadada\"};\n`;\n","import styled from \"styled-components\";\n\n/** CardsWrapper component used as a wrapper for Cards */\nexport const CardsWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n","import styled from \"styled-components\";\n\n/** Floating component used as a Floating Button Bottom Right Button */\nexport const FloatingButtonContainer = styled.div`\n  right: 5%;\n  bottom: 5%;\n  position: fixed;\n`;\n\nexport const FloatingBottomRightButton = styled.button`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(245, 245, 245, 0.075);\n  text-align: center;\n  padding: 0px;\n  font-size: 24px;\n  background-color: #c53e55;\n  color: #dadada;\n  &:hover {\n    -webkit-transform: scale(1.05);\n    -ms-transform: scale(1.05);\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n  &:focus {\n    outline: transparent;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** PageHeader component used as a title for Pages */\nexport const PageHeader = styled.h1`\n  font-size: 24px;\n  font-weight: 400;\n  color: ${(props) => props.inputColor || \"#c53e55\"};\n  text-align: left;\n`;\n","import styled from \"styled-components\";\n\n/** PageWrapper component used as a wrapper for Pages */\nexport const PageWrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n","import styled from \"styled-components\";\n\n/** BackButton component used as a Back button */\nexport const BackButton = styled.button`\n  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(245, 245, 245, 0.075);\n  padding: 8px 16px;\n  text-decoration: none;\n  display: inline-block;\n  background-color: #c53e55;\n  color: #dadada;\n  &:hover {\n    -webkit-transform: scale(1.05);\n    -ms-transform: scale(1.05);\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n  &:focus {\n    outline: transparent;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** Floating component used as a Floating Bottom Full Button */\nexport const FloatingBottomFullButtonContainer = styled.div`\n  width: 90%;\n  bottom: 0%;\n  position: fixed;\n  right: 0%;\n`;\n\nexport const FloatingBottomFullButton = styled.button`\n  width: 90%;\n  height: 10%;\n  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(245, 245, 245, 0.075);\n  text-align: center;\n  padding: 0px;\n  font-size: 24px;\n  background-color: #c53e55;\n  color: #dadada;\n  &:hover {\n    cursor: pointer;\n  }\n  &:focus {\n    outline: transparent;\n  }\n  &:disabled {\n    border: 1px solid #999999;\n    background-color: #cccccc;\n    color: #666666;\n    cursor: not-allowed;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** AddQuestionForm component*/\nexport const FormDivContainer = styled.div`\n  border-radius: 5px;\n  background-color: #c53e55;\n  padding: 20px;\n`;\n\nexport const FormRow = styled.div`\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n`;\n\nexport const FormLabelContainer = styled.div`\n  float: left;\n  width: 25%;\n  margin-top: 6px;\n  @media (max-width: 600px) {\n    width: 100%;\n    margin-top: 0;\n  }\n`;\n\nexport const FormInputContainer = styled.div`\n  float: left;\n  width: 75%;\n  margin-top: 6px;\n  @media (max-width: 600px) {\n    width: 100%;\n    margin-top: 0;\n  }\n`;\n\nexport const FormSubmitButton = styled.button`\n  background-color: #c53e55;\n  color: #dadada;\n  padding: 12px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  float: right;\n  &.hover {\n    background-color: #c53e55;\n  }\n  @media (max-width: 600px) {\n    width: 100%;\n    margin-top: 0;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  padding: 12px 12px 12px 0;\n  display: inline-block;\n  color: #dadada;\n`;\n\nexport const FormTextInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n`;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNewQuestion } from \"../../state/question/question.thunks\";\nimport { useCustomForm } from \"../../hooks/useCustomForm\";\nimport {\n  FormDivContainer,\n  FormInputContainer,\n  FormLabel,\n  FormLabelContainer,\n  FormRow,\n  FormSubmitButton,\n  FormTextInput,\n  BackButton,\n} from \"../../components\";\n/**\n * This component is used for adding new quesion\n */\nexport default function AddQuestionPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // go back to List Question page\n  const clearAndGoBack = () => {\n    history.push(`/`);\n  };\n\n  // dispatch add new question action and go to home page\n  const handleAddNewQuestion = (newQuestion) => {\n    dispatch(addNewQuestion(newQuestion));\n    alert(\"New question added!\");\n    history.push(`/`);\n  };\n\n  // form hook fallback function, used to format the value and request adding a new quesiton\n  const createNewQuestion = () => {\n    if (inputs.question && inputs.choices) {\n      const newQuestion = {\n        question: inputs.question,\n        choices: inputs.choices\n          .split(\",\")\n          .filter((choice) => choice !== null && choice.toString().length > 0),\n      };\n      handleAddNewQuestion(newQuestion);\n    }\n  };\n\n  // Initializing custom form hook with initial state value and callback function\n  const { inputs, handleInputChange, handleSubmit } = useCustomForm(\n    {\n      question: \"\",\n      choices: \"\",\n    },\n    createNewQuestion\n  );\n  return (\n    <nav>\n      <section>\n        <BackButton\n          onClick={() => {\n            clearAndGoBack();\n          }}\n        >\n          &laquo; Back\n        </BackButton>\n      </section>\n      <br></br>\n      <form onSubmit={handleSubmit}>\n        <FormDivContainer>\n          <FormRow>\n            <FormLabelContainer>\n              <FormLabel htmlFor=\"question\">Question</FormLabel>\n            </FormLabelContainer>\n            <FormInputContainer>\n              <FormTextInput\n                type=\"text\"\n                onChange={handleInputChange}\n                value={inputs.question}\n                required\n                name=\"question\"\n                placeholder=\"Your Question..\"\n              ></FormTextInput>\n            </FormInputContainer>\n          </FormRow>\n          <FormRow>\n            <FormLabelContainer>\n              <FormLabel htmlFor=\"choices\">Choices</FormLabel>\n            </FormLabelContainer>\n            <FormInputContainer>\n              <FormTextInput\n                type=\"text\"\n                onChange={handleInputChange}\n                value={inputs.choices}\n                required\n                name=\"choices\"\n                placeholder=\"Comma seprated choices\"\n              ></FormTextInput>\n            </FormInputContainer>\n          </FormRow>\n        </FormDivContainer>\n        <br></br>\n        <br></br>\n        <FormSubmitButton type=\"submit\">Add Question</FormSubmitButton>\n      </form>\n    </nav>\n  );\n}\n","import { useState, useCallback } from \"react\";\n/**\n *\n * @param {initial form values} initialState\n * @param {call back function for after form submission} callback\n */\nexport const useCustomForm = (initialState = {}, callback) => {\n  const [inputs, setValues] = useState(initialState);\n  const handleSubmit = useCallback(\n    (event) => {\n      event && event.preventDefault();\n      callback && callback();\n    },\n    [callback]\n  );\n  const handleInputChange = useCallback((event) => {\n    event.persist();\n    setValues((values) => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  }, []);\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs,\n  };\n};\n"],"sourceRoot":""}