{"version":3,"sources":["components/CardBodyText.js","components/CardContentWrapper.js","components/CardItem.js","components/CardItemWrapper.js","components/CardSubTitle.js","components/CardTitle.js","components/CardsWrapper.js","components/FloatingBottomRightButton.js","components/PageHeader.js","components/PageWrapper.js","components/BackButton.js","components/FloatingBottomFullButton.js","components/AddQuestionForm.js","state/question/question.selectors.js","features/ListQuestions/QuestionsPage.js"],"names":["CardBodyText","styled","h2","props","inputColor","CardContentWrapper","div","CardItem","CardItemWrapper","li","CardSubTitle","p","CardTitle","CardsWrapper","ul","FloatingButtonContainer","FloatingBottomRightButton","button","PageHeader","h1","PageWrapper","BackButton","FloatingBottomFullButtonContainer","FloatingBottomFullButton","FormDivContainer","FormRow","FormLabelContainer","FormInputContainer","FormSubmitButton","FormLabel","label","FormTextInput","input","selectAllQuestions","state","questions","selectVotingQuestion","votingQuestion","QuestionCard","React","lazy","QuestionsPage","content","dispatch","useDispatch","useSelector","questionsStatus","status","error","history","useHistory","question","useEffect","push","fetchQuestions","Object","values","map","questionObj","key","id","onClick"],"mappings":"q8BAGO,IAAMA,EAAeC,IAAOC,GAAV,KACd,SAACC,GAAD,OAAWA,EAAMC,YAAc,a,0GCDnC,IAAMC,EAAqBJ,IAAOK,IAAV,K,uXCAxB,IAAMC,EAAWN,IAAOK,IAAV,K,mOCAd,IAAME,EAAkBP,IAAOQ,GAAV,K,+KCArB,IAAMC,EAAeT,IAAOU,EAAV,KACd,SAACR,GAAD,OAAWA,EAAMC,YAAc,a,yMCDnC,IAAMQ,EAAYX,IAAOC,GAAV,KAMX,SAACC,GAAD,OAAWA,EAAMC,YAAc,a,+JCNnC,IAAMS,EAAeZ,IAAOa,GAAV,K,4pBCAlB,IAAMC,EAA0Bd,IAAOK,IAAV,KAMvBU,EAA4Bf,IAAOgB,OAAV,K,oJCN/B,IAAMC,EAAajB,IAAOkB,GAAV,KAGZ,SAAChB,GAAD,OAAWA,EAAMC,YAAc,a,gHCHnC,IAAMgB,EAAcnB,IAAOK,IAAV,K,0fCAjB,IAAMe,EAAapB,IAAOgB,OAAV,K,mrBCAhB,IAAMK,EAAoCrB,IAAOK,IAAV,KAOjCiB,EAA2BtB,IAAOgB,OAAV,K,k0CCP9B,IAAMO,EAAmBvB,IAAOK,IAAV,KAMhBmB,EAAUxB,IAAOK,IAAV,KAQPoB,EAAqBzB,IAAOK,IAAV,KAUlBqB,EAAqB1B,IAAOK,IAAV,KAUlBsB,EAAmB3B,IAAOgB,OAAV,KAiBhBY,EAAY5B,IAAO6B,MAAV,KAMTC,EAAgB9B,IAAO+B,MAAV,M,gCC5D1B,oEAGO,IAAMC,EAAqB,SAACC,GAAD,OAAWA,EAAMC,UAAUA,WAChDC,EAAuB,SAACF,GAAD,OAAWA,EAAMC,UAAUE,iB,gCCJ/D,0GAeMC,EAAeC,IAAMC,MAAK,kBAAM,gCAKvB,SAASC,IACtB,IAwBIC,EAxBEC,EAAWC,cACXT,EAAYU,YAAYZ,KACxBa,EAAkBD,aAAY,SAACX,GAAD,OAAWA,EAAMC,UAAUY,UACzDC,EAAQH,aAAY,SAACX,GAAD,OAAWA,EAAMC,UAAUa,SAC/CC,EAAUC,cACVC,EAAWN,aAAY,SAACX,GAAD,OAAWE,YAAqBF,MAqB7D,GAfAkB,qBAAU,WACS,OAAbD,GACFF,EAAQI,KAAR,YAED,CAACF,EAAUF,IAGdG,qBAAU,WACgB,SAApBN,GACFH,EAASW,iBAEV,CAACR,EAAiBH,IAIG,YAApBG,EAGFJ,EAAU,gDACL,GAAwB,cAApBI,EAAiC,CAG1CJ,EADqBa,OAAOC,OAAOrB,GACZsB,KAAI,SAACC,GAAD,OACzB,kBAACpB,EAAD,CAAcqB,IAAKD,EAAYE,GAAIT,SAAUO,WAElB,WAApBZ,IAETJ,EAAU,6BAAMM,IAGlB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,kBACA,kBAAC,IAAD,KAAeN,GACM,cAApBI,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEe,QAAS,WAzCjBZ,EAAQI,KAAR,eAwCM","file":"static/js/6.d791cbab.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n/** CardBodyText component used as a wrapper for Card body Text */\nexport const CardBodyText = styled.h2`\n  color: ${(props) => props.inputColor || \"#dadada\"};\n  font-size: 1.1rem;\n`;\n","import styled from \"styled-components\";\n\n/** CardContentWrapper component used as a wrapper for Card Content */\nexport const CardContentWrapper = styled.div`\n  padding: 1rem;\n  height: 100%;\n`;\n","import styled from \"styled-components\";\n\n/** CardItem component used as a wrapper for single card */\nexport const CardItem = styled.div`\n  border-radius: 0.25rem;\n  box-shadow: 0 20px 40px -14px #1e1e1e;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  background-color: #c53e55;\n  &:hover {\n    -webkit-transform: scale(1.05);\n    -ms-transform: scale(1.05);\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** CardItemWrapper component used as a wrapper for single card */\nexport const CardItemWrapper = styled.li`\n  display: grid;\n  padding: 1rem;\n  width: 100%;\n  @media (min-width: 40rem) {\n    width: 50%;\n  }\n  @media (min-width: 56rem) {\n    33.3333%;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** CardSubtitle component used as a wrapper for Card Subtitle */\nexport const CardSubTitle = styled.p`\n  color: ${(props) => props.inputColor || \"#dadada\"};\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-bottom: 1.25rem;\n  font-weight: 400;\n`;\n","import styled from \"styled-components\";\n\n/** CardTitle component used as a wrapper for Card Title */\nexport const CardTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: bold;\n  letter-spacing: 1px;\n  text-transform: capitalize;\n  margin: 0px;\n  color: ${(props) => props.inputColor || \"#dadada\"};\n`;\n","import styled from \"styled-components\";\n\n/** CardsWrapper component used as a wrapper for Cards */\nexport const CardsWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n","import styled from \"styled-components\";\n\n/** Floating component used as a Floating Button Bottom Right Button */\nexport const FloatingButtonContainer = styled.div`\n  right: 5%;\n  bottom: 5%;\n  position: fixed;\n`;\n\nexport const FloatingBottomRightButton = styled.button`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(245, 245, 245, 0.075);\n  text-align: center;\n  padding: 0px;\n  font-size: 24px;\n  background-color: #c53e55;\n  color: #dadada;\n  &:hover {\n    -webkit-transform: scale(1.05);\n    -ms-transform: scale(1.05);\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n  &:focus {\n    outline: transparent;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** PageHeader component used as a title for Pages */\nexport const PageHeader = styled.h1`\n  font-size: 24px;\n  font-weight: 400;\n  color: ${(props) => props.inputColor || \"#c53e55\"};\n  text-align: left;\n`;\n","import styled from \"styled-components\";\n\n/** PageWrapper component used as a wrapper for Pages */\nexport const PageWrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n","import styled from \"styled-components\";\n\n/** BackButton component used as a Back button */\nexport const BackButton = styled.button`\n  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(245, 245, 245, 0.075);\n  padding: 8px 16px;\n  text-decoration: none;\n  display: inline-block;\n  background-color: #c53e55;\n  color: #dadada;\n  &:hover {\n    -webkit-transform: scale(1.05);\n    -ms-transform: scale(1.05);\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n  &:focus {\n    outline: transparent;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** Floating component used as a Floating Bottom Full Button */\nexport const FloatingBottomFullButtonContainer = styled.div`\n  width: 90%;\n  bottom: 0%;\n  position: fixed;\n  right: 0%;\n`;\n\nexport const FloatingBottomFullButton = styled.button`\n  width: 90%;\n  height: 10%;\n  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(245, 245, 245, 0.075);\n  text-align: center;\n  padding: 0px;\n  font-size: 24px;\n  background-color: #c53e55;\n  color: #dadada;\n  &:hover {\n    cursor: pointer;\n  }\n  &:focus {\n    outline: transparent;\n  }\n  &:disabled {\n    border: 1px solid #999999;\n    background-color: #cccccc;\n    color: #666666;\n    cursor: not-allowed;\n  }\n`;\n","import styled from \"styled-components\";\n\n/** AddQuestionForm component*/\nexport const FormDivContainer = styled.div`\n  border-radius: 5px;\n  background-color: #c53e55;\n  padding: 20px;\n`;\n\nexport const FormRow = styled.div`\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n`;\n\nexport const FormLabelContainer = styled.div`\n  float: left;\n  width: 25%;\n  margin-top: 6px;\n  @media (max-width: 600px) {\n    width: 100%;\n    margin-top: 0;\n  }\n`;\n\nexport const FormInputContainer = styled.div`\n  float: left;\n  width: 75%;\n  margin-top: 6px;\n  @media (max-width: 600px) {\n    width: 100%;\n    margin-top: 0;\n  }\n`;\n\nexport const FormSubmitButton = styled.button`\n  background-color: #c53e55;\n  color: #dadada;\n  padding: 12px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  float: right;\n  &.hover {\n    background-color: #c53e55;\n  }\n  @media (max-width: 600px) {\n    width: 100%;\n    margin-top: 0;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  padding: 12px 12px 12px 0;\n  display: inline-block;\n  color: #dadada;\n`;\n\nexport const FormTextInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n`;\n","/**\n * List of selector used within features\n */\nexport const selectAllQuestions = (state) => state.questions.questions;\nexport const selectVotingQuestion = (state) => state.questions.votingQuestion;\nexport const selectQuestionById = (state, questionId) =>\n  state.questions.questions[questionId];\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectAllQuestions,\n  selectVotingQuestion,\n} from \"../../state/question/question.selectors\";\nimport { fetchQuestions } from \"../../state/question/question.thunks\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  CardsWrapper,\n  FloatingBottomRightButton,\n  FloatingButtonContainer,\n  PageHeader,\n  PageWrapper,\n} from \"../../components\";\nconst QuestionCard = React.lazy(() => import(\"./QuestionCard\"));\n\n/**\n * QuestionsPage, its The main page that is used to request questions and prepare showing them\n */\nexport default function QuestionsPage() {\n  const dispatch = useDispatch();\n  const questions = useSelector(selectAllQuestions);\n  const questionsStatus = useSelector((state) => state.questions.status);\n  const error = useSelector((state) => state.questions.error);\n  const history = useHistory();\n  const question = useSelector((state) => selectVotingQuestion(state));\n  const onGoToNewQuestion = () => {\n    history.push(`/add-new/`);\n  };\n\n  // listining to state for voting quesion and go to vote page when available\n  useEffect(() => {\n    if (question !== null) {\n      history.push(`/vote/`);\n    }\n  }, [question, history]);\n\n  // listining to state for questions status, and fetch if it's idle\n  useEffect(() => {\n    if (questionsStatus === \"idle\") {\n      dispatch(fetchQuestions());\n    }\n  }, [questionsStatus, dispatch]);\n\n  let content;\n\n  if (questionsStatus === \"loading\") {\n    // TODO: add better loading component\n    // if questionsStatus state object is in loading mood, then show loader\n    content = <div>Loading...</div>;\n  } else if (questionsStatus === \"succeeded\") {\n    // if Questions have been fetched, construct them and show the list\n    const orderedPosts = Object.values(questions);\n    content = orderedPosts.map((questionObj) => (\n      <QuestionCard key={questionObj.id} question={questionObj} />\n    ));\n  } else if (questionsStatus === \"failed\") {\n    // if Questions have failed to be fetched, show error message\n    content = <div>{error}</div>;\n  }\n\n  return (\n    <PageWrapper>\n      <PageHeader>Questions</PageHeader>\n      <CardsWrapper>{content}</CardsWrapper>\n      {questionsStatus === \"succeeded\" && (\n        <FloatingButtonContainer>\n          <FloatingBottomRightButton\n            onClick={() => {\n              onGoToNewQuestion();\n            }}\n          >\n            +\n          </FloatingBottomRightButton>\n        </FloatingButtonContainer>\n      )}\n    </PageWrapper>\n  );\n}\n"],"sourceRoot":""}